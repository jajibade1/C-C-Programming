#include <stdio.h>
#include <string.h>

#define MAX_TASKS 10
#define MAX_LENGTH 50

int main() {
    char tasks[MAX_TASKS][MAX_LENGTH];
    int numTasks = 0;
    char choice;
    
    do {
        printf("\n1. Add Task\n2. Delete Task\n3. View Tasks\n4. Exit\n");
        printf("Enter your choice: ");
        scanf(" %c", &choice);
        
        switch (choice) {
            case '1':
                if (numTasks < MAX_TASKS) {
                    printf("Enter task: ");
                    scanf(" %[^\n]s", tasks[numTasks]);
                    numTasks++;
                    printf("Task added successfully.\n");
                } else {
                    printf("Task list is full!\n");
                }
                break;
            case '2':
                if (numTasks > 0) {
                    printf("Enter task number to delete (1 to %d): ", numTasks);
                    int taskNum;
                    scanf("%d", &taskNum);
                    if (taskNum >= 1 && taskNum <= numTasks) {
                        for (int i = taskNum - 1; i < numTasks - 1; ++i) {
                            strcpy(tasks[i], tasks[i + 1]);
                        }
                        numTasks--;
                        printf("Task deleted successfully.\n");
                    } else {
                        printf("Invalid task number!\n");
                    }
                } else {
                    printf("No tasks to delete!\n");
                }
                break;
            case '3':
                if (numTasks > 0) {
                    printf("Tasks:\n");
                    for (int i = 0; i < numTasks; ++i) {
                        printf("%d. %s\n", i + 1, tasks[i]);
                    }
                } else {
                    printf("No tasks!\n");
                }
                break;
            case '4':
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice!\n");
        }
    } while (choice != '4');
    
    return 0;
}
